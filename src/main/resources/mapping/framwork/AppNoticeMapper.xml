<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuechen.web.dao.AppNoticeMapper" >
  <resultMap id="BaseResultMap" type="com.xuechen.web.bo.AppNotice" >
    <id column="notice_id" property="noticeId" jdbcType="INTEGER" />
    <result column="notice_type" property="noticeType" jdbcType="VARCHAR" />
    <result column="notice_title" property="noticeTitle" jdbcType="VARCHAR" />
    <result column="notice_content" property="noticeContent" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="removed" property="removed" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xuechen.web.bo.AppNotice" extends="BaseResultMap" >
    <result column="notice_content" property="noticeContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    notice_id, notice_type, notice_title, user_id, ctime, removed,notice_content
  </sql>
  <sql id="Blob_Column_List" >
    notice_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xuechen.web.bo.AppNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xuechen.web.bo.AppNoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_notice
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_notice
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuechen.web.bo.AppNoticeExample" >
    delete from app_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuechen.web.bo.AppNotice" useGeneratedKeys="true" keyProperty="noticeId" >
    insert into app_notice (notice_id, notice_type, notice_title, 
      user_id, ctime, removed, 
      notice_content)
    values (#{noticeId,jdbcType=INTEGER}, #{noticeType,jdbcType=VARCHAR}, #{noticeTitle,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, #{removed,jdbcType=VARCHAR}, 
      #{noticeContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xuechen.web.bo.AppNotice"  useGeneratedKeys="true" keyProperty="noticeId" >
    insert into app_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        notice_id,
      </if>
      <if test="noticeType != null" >
        notice_type,
      </if>
      <if test="noticeTitle != null" >
        notice_title,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="removed != null" >
        removed,
      </if>
      <if test="noticeContent != null" >
        notice_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="noticeType != null" >
        #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="noticeTitle != null" >
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null" >
        #{removed,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        #{noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuechen.web.bo.AppNoticeExample" resultType="java.lang.Integer" >
    select count(*) from app_notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update app_notice
    <set >
      <if test="record.noticeId != null" >
        notice_id = #{record.noticeId,jdbcType=INTEGER},
      </if>
      <if test="record.noticeType != null" >
        notice_type = #{record.noticeType,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeTitle != null" >
        notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.removed != null" >
        removed = #{record.removed,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeContent != null" >
        notice_content = #{record.noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update app_notice
    set notice_id = #{record.noticeId,jdbcType=INTEGER},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      removed = #{record.removed,jdbcType=VARCHAR},
      notice_content = #{record.noticeContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update app_notice
    set notice_id = #{record.noticeId,jdbcType=INTEGER},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      removed = #{record.removed,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuechen.web.bo.AppNotice" >
    update app_notice
    <set >
      <if test="noticeType != null" >
        notice_type = #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="noticeTitle != null" >
        notice_title = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null" >
        removed = #{removed,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        notice_content = #{noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xuechen.web.bo.AppNotice" >
    update app_notice
    set notice_type = #{noticeType,jdbcType=VARCHAR},
      notice_title = #{noticeTitle,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      removed = #{removed,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=LONGVARCHAR}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuechen.web.bo.AppNotice" >
    update app_notice
    set notice_type = #{noticeType,jdbcType=VARCHAR},
      notice_title = #{noticeTitle,jdbcType=VARCHAR},
       notice_content = #{noticeContent,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      removed = #{removed,jdbcType=VARCHAR}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
</mapper>